

--ALTER TABLE Сотрудник 
--	DROP FK1Сотрудник 

ALTER TABLE EMPLOYEE 
	DROP CONSTRAINT FK1EMPLOYEE 

GO	

ALTER TABLE REFRESHERING 
	DROP CONSTRAINT FK1REFRESHERING 
 
GO

ALTER TABLE REFRESHERING 
	DROP CONSTRAINT FK2REFRESHERING 
	
GO

ALTER TABLE PROFESSION 
	DROP CONSTRAINT FK1PROFESSION 
		
GO


ALTER TABLE PROFESSION_SKILL 
	DROP CONSTRAINT FK1PROFESSION_SKILL 
		
GO


ALTER TABLE PROFESSION_SKILL 
	DROP CONSTRAINT FK2PROFESSION_SKILL 
		
GO


ALTER TABLE VACANCY 
	DROP CONSTRAINT FK1VACANCY 
			
GO

	
ALTER TABLE VACANCY 
	DROP CONSTRAINT FK2VACANCY 
	
GO


ALTER TABLE HISTORY 
	DROP CONSTRAINT FK1HISTORY 
				
GO


ALTER TABLE HISTORY 
	DROP CONSTRAINT FK2HISTORY
		
GO


ALTER TABLE HISTORY 
	DROP CONSTRAINT FK3HISTORY 
				
GO

DROP VIEW  V_EMPLOYEE
DROP VIEW  PROFESSION
go


DROP PROCEDURE PDELETE_FROM_EMPLOYEE
DROP PROCEDURE PDELETE_FROM_V_PROFESSION
GO


DROP TABLE HISTORY  
DROP TABLE VACANCY
DROP TABLE ORGANIZATION  /* справочник */ 
DROP TABLE PROFESSION_SKILL
DROP TABLE PROFESSION
DROP TABLE SHERE_PROFESSION	/*справочник*/
DROP TABLE REFRESHERING
DROP TABLE REFRESHER_COURSE		/*справочник*/
DROP TABLE APPLICANT			/*справочник*/
DROP TABLE EMPLOYEE			
DROP TABLE SPECIALITY			/*справочник*/



CREATE TABLE SPECIALITY(
	ID INT PRIMARY KEY IDENTITY, 
	NAME VARCHAR(255) NOT NULL, 
	SYSTEM_SHEMA VARCHAR(255) NOT NULL
)
	
GO





CREATE TABLE EMPLOYEE(
	ID INT PRIMARY KEY IDENTITY, 
	ID_SPECIALITY INT NOT NULL,
	FIRST_NAME VARCHAR(100) NOT NULL,
	SECOND_NAME VARCHAR(100) NOT NULL,
	FATHER_NAME VARCHAR(100) NOT NULL,
	BIRTHDAY DATETIME NOT NULL
)
	
GO



ALTER TABLE EMPLOYEE 
	ADD CONSTRAINT FK1EMPLOYEE FOREIGN KEY (ID_SPECIALITY) 
        	REFERENCES SPECIALITY( ID )
 
	
GO

CREATE VIEW V_EMPLOYEE
AS
	SELECT ISNULL(E.ID,-999)  AS ID,
		E.ID_SPECIALITY AS ID_SPECIALITY,
		E.FIRST_NAME AS FIRST_NAME,
		E.SECOND_NAME AS SECOND_NAME,
		E.FATHER_NAME AS FATHER_NAME,
		E.BIRTHDAY AS BIRTHDAY,
		S.NAME AS NAME_SPECIALITY
	FROM
		EMPLOYEE AS E JOIN SPECIALITY AS S ON E.ID_SPECIALITY = S.ID

GO
CREATE TRIGGER TIDV_EMPLOYEE on V_EMPLOYEE
INSTEAD OF DELETE
as
begin
	DELETE FROM EMPLOYEE WHERE ID IN (SELECT ID FROM DELETED)
end
go

--ДЛЯ ENTITY
CREATE PROCEDURE PDELETE_FROM_EMPLOYEE ( @ID INT)
AS

BEGIN
	DELETE FROM V_EMPLOYEE WHERE ID = @ID
END
GO

CREATE TABLE APPLICANT(
	ID INT PRIMARY KEY IDENTITY, 
	FIRST_NAME VARCHAR(100) NOT NULL,
	SECOND_NAME VARCHAR(100) NOT NULL,
	FATHER_NAME VARCHAR(100) NOT NULL,
	
	LAST_WORK_SPACE VARCHAR(255),
	EDUCATION VARCHAR(100) NOT NULL,
	BIRTHDAY DATETIME NOT NULL, 
	FAMILY VARCHAR(255) NOT NULL, 
	SOCIAL_STATUS VARCHAR(255) NOT NULL
)

	
GO


CREATE TABLE REFRESHER_COURSE	(
	ID INT PRIMARY KEY IDENTITY, 
	NAME VARCHAR(255) NOT NULL,
	DURATION INT NOT NULL 
)

	
GO


CREATE TABLE REFRESHERING	(
	ID INT PRIMARY KEY IDENTITY, 
	ID_REFRESHER_COURSE INT NOT NULL, 
	ID_APPLICANT INT NOT NULL,
	START_DATE DATETIME NOT NULL,  
	END_DATE DATETIME NOT NULL
)
	
GO


ALTER TABLE REFRESHERING 
	ADD CONSTRAINT FK1REFRESHERING FOREIGN KEY (ID_REFRESHER_COURSE) 
        	REFERENCES REFRESHER_COURSE( ID )
 	
GO


ALTER TABLE REFRESHERING 
	ADD CONSTRAINT FK2REFRESHERING FOREIGN KEY (ID_APPLICANT) 
        	REFERENCES APPLICANT( ID )
	
GO

			

/*
	Сфера. Общая сфера профессии, название 
*/
CREATE TABLE SHERE_PROFESSION(
	ID INT PRIMARY KEY IDENTITY, 
	NAME VARCHAR(255) NOT NULL 
)
	
GO


/*
	Профессия, названеи и сфера ее деятельности 
*/
CREATE TABLE PROFESSION(
	ID INT PRIMARY KEY IDENTITY, 
	NAME VARCHAR(50) NOT NULL,
	ID_SHERE_PROFESSION INT NOT NULL
)
	
GO





ALTER TABLE PROFESSION 
	ADD CONSTRAINT FK1PROFESSION FOREIGN KEY (ID_SHERE_PROFESSION) 
        	REFERENCES SHERE_PROFESSION( ID )
	
GO


CREATE VIEW V_PROFESSION
AS
	SELECT 
		P.ID AS ID,
		P.NAME AS NAME,
		P.ID_SHERE_PROFESSION AS ID_SHERE_PROFESSION,
		SP.NAME AS NAME_SHERE_PROFESSION
	FROM 
		PROFESSION AS P JOIN SHERE_PROFESSION AS SP ON P.ID_SHERE_PROFESSION = SP.ID

GO

CREATE TRIGGER TIDV_PROFESSION on V_PROFESSION
INSTEAD OF DELETE
as
begin
	DELETE FROM PROFESSION WHERE ID IN (SELECT ID FROM DELETED)
end
go

--ДЛЯ ENTITY
CREATE PROCEDURE PDELETE_FROM_V_PROFESSION ( @ID INT)
AS
BEGIN
	DELETE FROM V_PROFESSION WHERE ID = @ID
END
GO


/*
	Владение Профессией, просии которыми владеет определенный соискатель
*/
CREATE TABLE PROFESSION_SKILL(
	ID INT PRIMARY KEY IDENTITY, 
	ID_APPLICANT INT NOT NULL,
	ID_PROFESSION INT NOT NULL
)
	
GO


ALTER TABLE PROFESSION_SKILL 
	ADD CONSTRAINT FK1PROFESSION_SKILL FOREIGN KEY (ID_APPLICANT) 
        	REFERENCES APPLICANT( ID )
	
GO


ALTER TABLE PROFESSION_SKILL 
	ADD CONSTRAINT FK2PROFESSION_SKILL FOREIGN KEY (ID_PROFESSION) 
        	REFERENCES PROFESSION( ID )
			
GO

	
/*
	Организация, информация о организациях предоставляющие вакансии
*/
CREATE TABLE ORGANIZATION(
	ID INT PRIMARY KEY IDENTITY, 
	NAME VARCHAR(255) NOT NULL,
	ABOUT VARCHAR(255)
)
	
GO


/*
	Сведения о предоставленйо вакансии
*/
CREATE TABLE VACANCY(
	ID INT PRIMARY KEY IDENTITY, 
	ID_ORGANIZATION INT NOT NULL,
	ID_PROFESSION INT NOT NULL,
	ABOUT VARCHAR(255) NOT NULL,
	STATUS BIT NOT NULL DEFAULT 1, /*true - актуальна/false-неактульна*/
	MIN_EXPERIENCE INT NOT NULL ,
	MAX_EXPERIENCE INT NOT NULL ,
	DATE_ADD DateTIME NOT NULL
)
	
GO



ALTER TABLE VACANCY 
	ADD CONSTRAINT FK1VACANCY FOREIGN KEY (ID_PROFESSION) 
        	REFERENCES PROFESSION( ID )
		
GO

		
ALTER TABLE VACANCY 
	ADD CONSTRAINT FK2VACANCY FOREIGN KEY (ID_ORGANIZATION) 
        	REFERENCES ORGANIZATION( ID )	
GO


/*
	История, Сведенья о предложеных тех или иных вакансиях соискателям
*/
CREATE TABLE HISTORY(
	ID INT PRIMARY KEY IDENTITY, 
	ID_EMPLOYEE INT NOT NULL,
	ID_VACANCY INT NOT NULL,
	ID_APPLICANT INT NOT NULL,
	STATUS CHAR(1) NOT NULL DEFAULT '?', /* ? - расматривается, + принял соискатель, - не принял соискатель*/
	DATE_ADD DateTIME NOT NULL
)
	
GO


ALTER TABLE HISTORY 
	ADD CONSTRAINT FK1HISTORY FOREIGN KEY (ID_EMPLOYEE) 
        	REFERENCES EMPLOYEE( ID )
				
GO


ALTER TABLE HISTORY 
	ADD CONSTRAINT FK2HISTORY FOREIGN KEY (ID_VACANCY) 
        	REFERENCES VACANCY( ID )
				
GO


ALTER TABLE HISTORY 
	ADD CONSTRAINT FK3HISTORY FOREIGN KEY (ID_APPLICANT) 
        	REFERENCES APPLICANT( ID )
				
GO


/*ALTER TABLE Сотрудник 
	ADD CONSTRAINT FK1Сотрудник FOREIGN KEY (Код_Должность) 
        	REFERENCES Должность(Код)
*/                                                                                      

