//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cursovaia.Logic.DataBase
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class WIN_Server : DbContext
    {
        public WIN_Server()
            : base("name=WIN_Server")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Applicant> Applicant { get; set; }
        public DbSet<Employee> Employee { get; set; }
        public DbSet<History> History { get; set; }
        public DbSet<Organization> Organization { get; set; }
        public DbSet<Profession> Profession { get; set; }
        public DbSet<ProfessionSkill> ProfessionSkill { get; set; }
        public DbSet<RefresherCours> RefresherCours { get; set; }
        public DbSet<Refreshering> Refreshering { get; set; }
        public DbSet<ShereProfession> ShereProfession { get; set; }
        public DbSet<Speciality> Speciality { get; set; }
        public DbSet<Vacancy> Vacancy { get; set; }
        public DbSet<VEmployee> V_EMPLOYEE { get; set; }
        public DbSet<VProfession> VProfession { get; set; }
        public DbSet<VProfessionSkill> VProfessionSkill { get; set; }
    
        public virtual int pDELETE_FROM_EMPLOYEE(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pDELETE_FROM_EMPLOYEE", iDParameter);
        }
    
        public virtual int PDELETE_FROM_EMPLOYEE1(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDELETE_FROM_EMPLOYEE1", iDParameter);
        }
    
        public virtual int PDELETE_FROM_PROFESSION(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDELETE_FROM_PROFESSION", iDParameter);
        }
    
        public virtual int PDELETE_FROM_V_PROFESS(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDELETE_FROM_V_PROFESS", iDParameter);
        }
    
        public virtual int PDELETE_FROM_V_PROFESSION(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PDELETE_FROM_V_PROFESSION", iDParameter);
        }
    
        public virtual int P_DELETE_V_PROFESSION_SKILL(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DELETE_V_PROFESSION_SKILL", iDParameter);
        }
    
        public virtual int P_INSERT_V_ROFESSION_SKILL(Nullable<int> iD_APPLICANT, Nullable<int> iD_PROFESSION)
        {
            var iD_APPLICANTParameter = iD_APPLICANT.HasValue ?
                new ObjectParameter("ID_APPLICANT", iD_APPLICANT) :
                new ObjectParameter("ID_APPLICANT", typeof(int));
    
            var iD_PROFESSIONParameter = iD_PROFESSION.HasValue ?
                new ObjectParameter("ID_PROFESSION", iD_PROFESSION) :
                new ObjectParameter("ID_PROFESSION", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_INSERT_V_ROFESSION_SKILL", iD_APPLICANTParameter, iD_PROFESSIONParameter);
        }
    
        public virtual int P_UPDATE_V_ROFESSION_SKILL(Nullable<int> iD, Nullable<int> iD_APPLICANT, Nullable<int> iD_PROFESSION)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var iD_APPLICANTParameter = iD_APPLICANT.HasValue ?
                new ObjectParameter("ID_APPLICANT", iD_APPLICANT) :
                new ObjectParameter("ID_APPLICANT", typeof(int));
    
            var iD_PROFESSIONParameter = iD_PROFESSION.HasValue ?
                new ObjectParameter("ID_PROFESSION", iD_PROFESSION) :
                new ObjectParameter("ID_PROFESSION", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_UPDATE_V_ROFESSION_SKILL", iDParameter, iD_APPLICANTParameter, iD_PROFESSIONParameter);
        }
    }
}
